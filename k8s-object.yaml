# Kubernetes performs container orchestration by using definition files. Definition files are yml files 
# Definition file, will have 4 top level elements
# 1. apiVersion: 
# 2. kind: 
# 3. metadata:
# 4. spec: 

# apiVersion:
# ---------------
# Depending on kubernetes object we want to create, there is corresponding code library we want to use.
# apiVersion referes to code library
# Kind     			apiVersion
# ========================
# Pod       			v1
# Service   			v1
# NameSpace     		v1
# Secrets         		v1
# RepliaSet       		apps/v1
# Deployment      		apps/v1

# kind:
# ----------
# Refers to kubernetes object which we want to create.
# Ex: Pod, Replicaset, service etc

# metadata:
# -----------
# Additional information about the kubernets object
# like name, labels  etc

# spec:
# ------
# Contains docker container related information like image name,
# environment variables, port mapping etc.
# to access the pod, expose it as nodeport kubectl expose pod nginx-pod -n nginx --port=80 --type=NodePort