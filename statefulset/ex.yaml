apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata: 
  name: "mongo-db"
  namespace: "data"
spec:
  serviceName: "mongo-db" 
  replicas: 1
  selector: 
    matchLabels: 
      app: "mongo-db"
  template: 
    metadata: 
      labels: 
        app: "mongo-db"
    spec: 
      containers: 
        - name: "mongo-db"
          image: "mongo"
          imagePullPolicy: "Always"
          env: 
            - name: "MONGO_INITDB_ROOT_USERNAME"
              value: "admin"
            - name: "MONGO_INITDB_ROOT_PASSWORD"
              value: "admin"             
          ports: 
            - containerPort: 27017
              name: "mongodb"     
          volumeMounts: 
            - name: "mongodb-persistent-storage"
              mountPath: "/data/db"         
      volumes: 
        - name: "mongodb-persistent-storage"
          persistentVolumeClaim: 
            claimName: "mongodb-pvc"
---
apiVersion: "v1"
kind: "Service"
metadata: 
  name: "mongo-db"
  namespace: "data"
  labels: 
    app: "mongo-db"
spec: 
  ports: 
    - name: "mongodb"
      port: 27017
      targetPort: 27017
  clusterIP: "None"
  selector: 
    app: "mongo-db"

---
# as nodeport
# apiVersion: "v1"
# kind: "Service"
# metadata: 
#   name: "mongo-db"
#   namespace: "data"
#   labels: 
#     app: "mongo-db"
# spec: 
#   externalTrafficPolicy: "Local"
#   ports: 
#     - name: "mongodb"
#       port: 27017
#       nodePort: 30332
#   type: "NodePort"
#   selector: 
#     app: "mongo-db"